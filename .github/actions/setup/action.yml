name: Setup
description: Setup Bun and install dependencies

inputs:
  working-directory:
    description: 'Working directory for the setup'
    required: false
    default: '.'

runs:
  using: composite
  steps:
    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    # - name: Restore dependencies
    #   id: bun-cache
    #   uses: actions/cache/restore@v4
    #   with:
    #     path: |
    #       ${{ inputs.working-directory }}/node_modules
    #       ~/.bun/install/cache
    #     key: ${{ runner.os }}-bun-${{ inputs.working-directory }}-${{ hashFiles(format('{0}/bun.lock', inputs.working-directory)) }}-${{ hashFiles(format('{0}/package.json', inputs.working-directory)) }}
    #     restore-keys: |
    #       ${{ runner.os }}-bun-${{ inputs.working-directory }}-${{ hashFiles(format('{0}/bun.lock', inputs.working-directory)) }}
    #       ${{ runner.os }}-bun-${{ inputs.working-directory }}-

    - name: Install dependencies
      if: steps.bun-cache.outputs.cache-hit != 'true'
      run: bun install --frozen-lockfile
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    # - name: Cache dependencies
    #   if: steps.bun-cache.outputs.cache-hit != 'true'
    #   uses: actions/cache/save@v4
    #   with:
    #     path: |
    #       ${{ inputs.working-directory }}/node_modules
    #       ~/.bun/install/cache
    #     key: ${{ steps.bun-cache.outputs.cache-primary-key }}
